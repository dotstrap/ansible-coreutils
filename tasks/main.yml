---

#####=== install ===#####

- name: install
  homebrew:
    name: "{{ coreutils_name }}"
    state: "{{ install_state }}"
  when: ansible_distribution == 'MacOSX'
  tags:
    - bootstrap
    - install

#####=== configure ===#####

- name: setup | determine homebrew prefix
  command: "brew --prefix"
  register: brew_prefix
  when: ansible_distribution == 'MacOSX'

- block:
  - name: bash/zsh | configure | PATH
    blockinfile:
      dest: "{{ shell_profile }}"
      state: "{{ configuration_state }}"
      create: yes
      backup: no
      marker: "{{ coreutils_marker }}"
      block: |
        coreutils_path="{{ brew_prefix.stdout }}/opt/coreutils/libexec/gnubin"
        if [[ "$PATH" != *$coreutils_path* ]]; then
          export PATH="$coreutils_path:$PATH"
        fi
        coreutils_manpath="{{ brew_prefix.stdout }}/opt/coreutils/libexec/gnuman"
        if [[ "$PATH" != *$coreutils_manpath* ]]; then
          export PATH="$coreutils_manpath::$PATH"
        fi
  when: ansible_distribution == 'MacOSX'
  tags:
    - bootstrap
    - configure
    - update

- block:
  - name: fish | configure | PATH
    command: fish -c "set -Ux fish_user_paths {{ brew_prefix.stdout }}/opt/coreutils/libexec/gnubin $fish_user_paths"
    # trailing ':' is important; see https://github.com/fish-shell/fish-shell/issues/2090
  - name: fish | configure | MANPATH
    command: fish -c "set -Ux MANPATH '{{ brew_prefix.stdout }}/opt/coreutils/libexec/gnubin:'"
  when: (ansible_distribution == 'MacOSX') and (ansible_user_shell | match(".*\/fish"))
  tags:
    - bootstrap
    - configure
    - update
